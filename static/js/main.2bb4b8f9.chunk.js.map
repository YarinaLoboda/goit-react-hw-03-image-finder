{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/requests.js","components/constList/constList.js","components/Loader/Loader.js","App.js","index.js"],"names":["HeaderSearchbar","styled","header","SearchForm","form","SearchFormButton","button","SearchFormButtonLabel","span","SearchFormInput","input","Searchbar","state","value","handleFormSubmit","evt","preventDefault","props","onSubmit","querry","currentTarget","elements","setState","handleChange","target","this","type","name","autocomplete","autoFocus","placeholder","onChange","Component","GalleryItem","li","GalleryItemImage","img","ImageGalleryItem","onClick","onImgClick","max","tag","src","imgSrc","originalImg","alt","Gallery","ul","ImageGallery","images","length","map","image","min","tags","id","LoadMoreBtn","Button","ModalOverlay","div","ModalDiv","modalRoot","document","querySelector","Modal","handleKeydown","e","code","onClose","handleClick","window","addEventListener","removeEventListener","onShow","createPortal","getImagesGallery","query","currPage","a","querryUrl","fetch","method","cache","response","ok","json","dataArr","console","log","Container","SpinnerLoader","color","height","width","App","showModal","isShow","isLoading","totalImg","currentPage","imagesData","error","handleSubmit","querryObj","toast","position","onClickLoadMoreBtn","prevState","toggleModal","modalObj","modalClose","prevProps","getQuerryData","total","hits","imagesObj","hit","webformatURL","largeImageURL","success","concat","setTimeout","pageLeave","Math","ceil","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2bb4b8f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HeaderSearchbar = styled.header`\r\n   {\r\n    top: 0;\r\n    left: 0;\r\n    position: sticky;\r\n    z-index: 1100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 64px;\r\n    padding-right: 24px;\r\n    padding-left: 24px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n   {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n  }\r\n`;\r\nconst SearchFormButton = styled.button`\r\n   {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-image: url(https://img.icons8.com/material-outlined/24/000000/search--v1.png);\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n  }\r\n  &: hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst SearchFormButtonLabel = styled.span`\r\n   {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n`;\r\n\r\nconst SearchFormInput = styled.input`\r\n   {\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n    font-family: Verdana, Arial, Helvetica, sans-serif;\r\n  }\r\n  & :placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  handleFormSubmit = evt => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit({ querry: evt.currentTarget.elements.querry.value });\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  handleChange = evt => {\r\n    this.setState({ value: evt.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <HeaderSearchbar>\r\n        <SearchForm onSubmit={this.handleFormSubmit}>\r\n          <SearchFormButton>\r\n            <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n          </SearchFormButton>\r\n\r\n          <SearchFormInput\r\n            type=\"text\"\r\n            name=\"querry\"\r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={value}\r\n            onChange={this.handleChange}\r\n          />\r\n        </SearchForm>\r\n      </HeaderSearchbar>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GalleryItem = styled.li`\r\n   {\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n  }\r\n`;\r\n\r\nconst GalleryItemImage = styled.img`\r\n   {\r\n    width: 100%;\r\n    height: 260px;\r\n    object-fit: cover;\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n  }\r\n  & :hover {\r\n    transform: scale(1.2);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n\r\nexport default function ImageGalleryItem(props) {\r\n  const onImageClick = evt => {\r\n    props.onImgClick({ max: props.max, tag: props.tag });\r\n  };\r\n\r\n  return (\r\n    <GalleryItem>\r\n      <GalleryItemImage\r\n        onClick={onImageClick}\r\n        src={props.imgSrc}\r\n        originalImg={props.max}\r\n        alt={props.tag}\r\n      />\r\n    </GalleryItem>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imgSrc: PropTypes.string.isRequired,\r\n      max: PropTypes.string.isRequired,\r\n      tag: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n\r\n  onImgClick: PropTypes.func,\r\n};\r\n","import styled from 'styled-components';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gallery = styled.ul`\r\n   {\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\n\r\nexport default function ImageGallery(props) {\r\n  return (\r\n    props.images.length > 0 && (\r\n      <Gallery>\r\n        {props.images.map(image => (\r\n          <ImageGalleryItem\r\n            key={image.id}\r\n            imgSrc={image.min}\r\n            max={image.max}\r\n            tag={image.tags}\r\n            onImgClick={props.onClick}\r\n          />\r\n        ))}\r\n      </Gallery>\r\n    )\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      max: PropTypes.string.isRequired,\r\n      min: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadMoreBtn = styled.button`\r\n   {\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n    padding: 10px;\r\n    border-radius: 10%;\r\n    border: 2px solid #ccc;\r\n    font-weight: 600;\r\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\r\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\r\n    cursor: pointer;\r\n\r\n    &: hover {\r\n      background-color: #ccc;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Button(props) {\r\n  const onBtnClick = () => {\r\n    props.onClick();\r\n  };\r\n\r\n  return (\r\n    <LoadMoreBtn type=\"button\" onClick={onBtnClick}>\r\n      &nbsp;Load&nbsp;more&nbsp;\r\n    </LoadMoreBtn>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalOverlay = styled.div`\r\n   {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    z-index: 1200;\r\n  }\r\n`;\r\n\r\nconst ModalDiv = styled.div`\r\n   {\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n  }\r\n`;\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleClick = e => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props.onShow;\r\n\r\n    return createPortal(\r\n      <ModalOverlay onClick={this.handleClick}>\r\n        <ModalDiv>\r\n          <img src={src} alt={alt} />\r\n        </ModalDiv>\r\n      </ModalOverlay>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onShow: PropTypes.shape({\r\n    alt: PropTypes.string.isRequired,\r\n    isShow: PropTypes.bool.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n  }),\r\n\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { USR_KEY, PER_PAGE, BASE_URL } from './constList/constList';\r\n\r\nexport const getImagesGallery = async (query, currPage) => {\r\n  const querryUrl = `${BASE_URL}?q=${query}&page=${currPage}&key=${USR_KEY}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`;\r\n  const response = await fetch(querryUrl, {\r\n    method: 'GET',\r\n    cache: 'no-cache',\r\n  });\r\n\r\n  if (response.ok) {\r\n    const dataArr = await response.json();\r\n    return dataArr;\r\n  } else {\r\n    console.log('HTTP ERROR');\r\n  }\r\n};\r\n","export const USR_KEY = '24105767-529978ca3577f63abe59720d6';\r\nexport const PER_PAGE = 12;\r\nexport const BASE_URL = 'https://pixabay.com/api/';\r\n","import Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n   {\r\n    display: flex;\r\n    margin: 15px;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport default function SpinnerLoader() {\r\n  return (\r\n    <Container>\r\n      <Loader type=\"Grid\" color=\"#3f51b5\" height={100} width={100} />\r\n    </Container>\r\n  );\r\n}\r\n","import { Component } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { PER_PAGE } from './components/constList/constList';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport { getImagesGallery } from './components/requests';\nimport SpinnerLoader from './components/Loader/Loader';\n\nexport default class App extends Component {\n  state = {\n    showModal: { isShow: false, src: null, alt: null },\n    isLoading: false,\n    querry: '',\n    totalImg: null,\n    currentPage: 1,\n    imagesData: [],\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.querry !== this.state.querry ||\n      prevState.currentPage !== this.state.currentPage\n    ) {\n      this.getQuerryData(this.state.querry, this.state.currentPage);\n    }\n  }\n\n  handleSubmit = querryObj => {\n    const { querry } = querryObj;\n\n    if (!querry) {\n      toast.error('Your querry is empty !', { position: 'top-right' });\n      return;\n    }\n\n    this.setState({ querry: querry, currentPage: 1 });\n  };\n\n  async getQuerryData(querry, currPage) {\n    this.setState({\n      isLoading: true,\n    });\n\n    try {\n      const imagesData = await getImagesGallery(querry, currPage);\n      if (imagesData) {\n        const { total, hits } = imagesData;\n\n        if (!total) {\n          toast.error('Images not find !', { position: 'top-right' });\n          return;\n        }\n\n        const imagesObj = hits.map(hit => ({\n          id: hit.id,\n          min: hit.webformatURL,\n          max: hit.largeImageURL,\n          tags: hit.tags,\n        }));\n\n        if (currPage === 1) {\n          this.setState({\n            totalImg: total,\n            currentPage: currPage,\n            imagesData: imagesObj,\n          });\n\n          toast.success(`${total} images was find !`, {\n            position: 'top-right',\n          });\n        }\n\n        if (currPage > 1) {\n          this.setState(prevState => ({\n            currentPage: currPage,\n            imagesData: prevState.imagesData.concat(imagesObj),\n          }));\n        }\n      }\n    } catch (error) {\n      this.setState({ error });\n    } finally {\n      setTimeout(\n        () =>\n          this.setState({\n            isLoading: false,\n          }),\n        500,\n      );\n    }\n  }\n\n  onClickLoadMoreBtn = () => {\n    this.setState(prevState => ({ currentPage: prevState.currentPage + 1 }));\n  };\n\n  toggleModal = modalObj => {\n    const { isShow } = this.state.showModal;\n    this.setState({\n      showModal: {\n        isShow: !isShow,\n        src: modalObj.max,\n        alt: modalObj.tag,\n      },\n    });\n  };\n\n  modalClose = () => {\n    this.setState({\n      showModal: {\n        isShow: false,\n        src: null,\n        alt: null,\n      },\n    });\n  };\n\n  render() {\n    const { isShow } = this.state.showModal;\n    const pageLeave =\n      Math.ceil(this.state.totalImg / PER_PAGE) - this.state.currentPage;\n\n    return (\n      <>\n        {isShow && (\n          <Modal onShow={this.state.showModal} onClose={this.modalClose} />\n        )}\n        <Toaster />\n        <Searchbar onSubmit={this.handleSubmit} />\n        <ImageGallery images={this.state.imagesData} onClick={this.toggleModal}>\n          <ImageGalleryItem />\n        </ImageGallery>\n        {this.state.isLoading && <SpinnerLoader />}\n        {pageLeave >= 1 && <Button onClick={this.onClickLoadMoreBtn} />}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}