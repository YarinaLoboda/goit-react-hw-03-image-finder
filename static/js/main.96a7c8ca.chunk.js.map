{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/requests.js","components/const/const.js","components/Loader/Loader.js","App.js","index.js"],"names":["HeaderSearchbar","styled","header","SearchForm","form","SearchFormButton","button","SearchFormButtonLabel","span","SearchFormInput","input","Searchbar","state","value","handleFormSubmit","evt","preventDefault","props","onSubmit","querry","currentTarget","elements","handleChange","setState","target","this","type","name","autocomplete","autoFocus","placeholder","onChange","Component","GalleryItem","li","GalleryItemImage","img","ImageGalleryItem","onImageClick","onImgClick","max","tag","onClick","src","imgSrc","originalImg","alt","Gallery","ul","ImageGallery","images","length","map","image","min","tags","id","LoadMoreBtn","Button","onBtnClick","ModalOverlay","div","ModalDiv","modalRoot","document","querySelector","Modal","handleKeydown","e","code","onClose","handleClick","window","addEventListener","removeEventListener","onShow","createPortal","getImagesGallery","query","currPage","a","querryUrl","fetch","method","cache","response","ok","json","dataArr","console","log","Container","SpinnerLoader","color","height","width","App","showModal","isshow","isLoading","totalImg","currentPage","imagesData","error","handleSubmit","querryObj","getQuerryData","toast","position","onClickLoadMoreBtn","toggleModal","modalObj","modalClose","total","hits","imagesObj","hit","webformatURL","largeImageURL","success","prevState","concat","setTimeout","pageLeave","Math","ceil","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96a7c8ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HeaderSearchbar = styled.header`\r\n   {\r\n    top: 0;\r\n    left: 0;\r\n    position: sticky;\r\n    z-index: 1100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 64px;\r\n    padding-right: 24px;\r\n    padding-left: 24px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n   {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n  }\r\n`;\r\nconst SearchFormButton = styled.button`\r\n   {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-image: url(https://img.icons8.com/material-outlined/24/000000/search--v1.png);\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n  }\r\n  &: hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst SearchFormButtonLabel = styled.span`\r\n   {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n`;\r\n\r\nconst SearchFormInput = styled.input`\r\n   {\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n    font-family: Verdana, Arial, Helvetica, sans-serif;\r\n  }\r\n  & :placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  handleFormSubmit = evt => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit({ querry: evt.currentTarget.elements.querry.value });\r\n  };\r\n\r\n  handleChange = evt => {\r\n    this.setState({ value: evt.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <HeaderSearchbar>\r\n        <SearchForm onSubmit={this.handleFormSubmit}>\r\n          <SearchFormButton>\r\n            <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n          </SearchFormButton>\r\n\r\n          <SearchFormInput\r\n            type=\"text\"\r\n            name=\"querry\"\r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={value}\r\n            onChange={this.handleChange}\r\n          />\r\n        </SearchForm>\r\n      </HeaderSearchbar>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GalleryItem = styled.li`\r\n   {\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n  }\r\n`;\r\n\r\nconst GalleryItemImage = styled.img`\r\n   {\r\n    width: 100%;\r\n    height: 260px;\r\n    object-fit: cover;\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n  }\r\n  & :hover {\r\n    transform: scale(1.2);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n\r\nclass ImageGalleryItem extends Component {\r\n  onImageClick = evt => {\r\n    this.props.onImgClick({ max: this.props.max, tag: this.props.tag });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GalleryItem>\r\n        <GalleryItemImage\r\n          onClick={this.onImageClick}\r\n          src={this.props.imgSrc}\r\n          originalImg={this.props.max}\r\n          alt={this.props.tag}\r\n        />\r\n      </GalleryItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imgSrc: PropTypes.string.isRequired,\r\n      max: PropTypes.string.isRequired,\r\n      tag: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n\r\n  onImgClick: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gallery = styled.ul`\r\n   {\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\n\r\nexport default class ImageGallery extends Component {\r\n  render() {\r\n    const images = this.props.images;\r\n\r\n    return (\r\n      images.length > 0 && (\r\n        <Gallery>\r\n          {images.map(image => (\r\n            <ImageGalleryItem\r\n              key={image.id}\r\n              imgSrc={image.min}\r\n              max={image.max}\r\n              tag={image.tags}\r\n              onImgClick={this.props.onClick}\r\n            />\r\n          ))}\r\n        </Gallery>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      max: PropTypes.string.isRequired,\r\n      min: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadMoreBtn = styled.button`\r\n   {\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n    padding: 10px;\r\n    border-radius: 10%;\r\n    border: 2px solid #ccc;\r\n    font-weight: 600;\r\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\r\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\r\n    cursor: pointer;\r\n\r\n    &: hover {\r\n      background-color: #ccc;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Button extends Component {\r\n  onBtnClick = () => {\r\n    this.props.onClick();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LoadMoreBtn type=\"button\" onClick={this.onBtnClick}>\r\n        &nbsp;Load&nbsp;more&nbsp;\r\n      </LoadMoreBtn>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalOverlay = styled.div`\r\n   {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    z-index: 1200;\r\n  }\r\n`;\r\n\r\nconst ModalDiv = styled.div`\r\n   {\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n  }\r\n`;\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleClick = e => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props.onShow;\r\n\r\n    return createPortal(\r\n      <ModalOverlay onClick={this.handleClick}>\r\n        <ModalDiv>\r\n          <img src={src} alt={alt} />\r\n        </ModalDiv>\r\n      </ModalOverlay>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onShow: PropTypes.shape({\r\n    alt: PropTypes.string.isRequired,\r\n    isshow: PropTypes.bool.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n  }),\r\n\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { USR_KEY, PER_PAGE, BASE_URL } from './const/const';\r\n\r\nexport const getImagesGallery = async (query, currPage) => {\r\n  const querryUrl = `${BASE_URL}?q=${query}&page=${currPage}&key=${USR_KEY}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`;\r\n\r\n  const response = await fetch(querryUrl, {\r\n    method: 'GET',\r\n    cache: 'no-cache',\r\n  });\r\n\r\n  if (response.ok) {\r\n    const dataArr = await response.json();\r\n    return dataArr;\r\n  } else {\r\n    console.log('HTTP ERROR');\r\n  }\r\n};\r\n","export const USR_KEY = '24105767-529978ca3577f63abe59720d6';\r\nexport const PER_PAGE = 12;\r\nexport const BASE_URL = 'https://pixabay.com/api/';\r\n","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n   {\r\n    display: flex;\r\n    margin: 15px;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport default class SpinnerLoader extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Loader type=\"Grid\" color=\"#3f51b5\" height={100} width={100} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { PER_PAGE } from './components/const/const';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport { getImagesGallery } from './components/requests';\nimport SpinnerLoader from './components/Loader/Loader';\n\nexport default class App extends Component {\n  state = {\n    showModal: { isshow: false, src: null, alt: null },\n    isLoading: false,\n    querry: '',\n    totalImg: null,\n    currentPage: null,\n    imagesData: [],\n    error: null,\n  };\n\n  componentDidUpdate() {}\n\n  handleSubmit = querryObj => {\n    const { querry } = querryObj;\n\n    if (!querry) {\n      toast.error('Your querry is empty !', { position: 'top-right' });\n      return;\n    }\n\n    this.setState({ querry: querry });\n    this.getQuerryData(querry);\n  };\n\n  async getQuerryData(querry, currPage = 1) {\n    try {\n      this.setState({\n        isLoading: true,\n      });\n\n      const imagesData = await getImagesGallery(querry, currPage);\n      if (imagesData) {\n        const { total, hits } = imagesData;\n\n        if (!total) {\n          toast.error('Images not find !', { position: 'top-right' });\n          return;\n        }\n\n        const imagesObj = hits.map(hit => ({\n          id: hit.id,\n          min: hit.webformatURL,\n          max: hit.largeImageURL,\n          tags: hit.tags,\n        }));\n\n        if (currPage === 1) {\n          this.setState({\n            totalImg: total,\n            currentPage: currPage,\n            imagesData: imagesObj,\n          });\n\n          toast.success(`${total} images was find !`, {\n            position: 'top-right',\n          });\n        }\n\n        if (currPage > 1) {\n          this.setState(prevState => ({\n            currentPage: currPage,\n            imagesData: prevState.imagesData.concat(imagesObj),\n          }));\n        }\n      }\n    } catch (error) {\n      this.setState({ error });\n    } finally {\n      setTimeout(\n        () =>\n          this.setState({\n            isLoading: false,\n          }),\n        500,\n      );\n    }\n  }\n\n  onClickLoadMoreBtn = () => {\n    this.getQuerryData(this.state.querry, this.state.currentPage + 1);\n  };\n\n  toggleModal = modalObj => {\n    const { isshow } = this.state.showModal;\n    this.setState({\n      showModal: {\n        isshow: !isshow,\n        src: modalObj.max,\n        alt: modalObj.tag,\n      },\n    });\n  };\n\n  modalClose = () => {\n    this.setState({\n      showModal: {\n        isshow: false,\n        src: null,\n        alt: null,\n      },\n    });\n  };\n\n  render() {\n    const { isshow } = this.state.showModal;\n    const pageLeave =\n      Math.ceil(this.state.totalImg / PER_PAGE) - this.state.currentPage;\n\n    return (\n      <>\n        {isshow && (\n          <Modal onShow={this.state.showModal} onClose={this.modalClose} />\n        )}\n        <Toaster />\n        <Searchbar onSubmit={this.handleSubmit} />\n        <ImageGallery images={this.state.imagesData} onClick={this.toggleModal}>\n          <ImageGalleryItem />\n        </ImageGallery>\n        {this.state.isLoading && <SpinnerLoader />}\n        {pageLeave >= 1 && <Button onClick={this.onClickLoadMoreBtn} />}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}